[
  {
    "question": "How many http requests have a status code other than 200 in the last 5 minutes?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 5 MINUTE)\n| where NOT QUERY_STRING(['`span.attributes.http@status_code`'], '200')\n| stats count() as error_request_count",
    "type": "1"
  },
  {
    "question": "How many logs with a 4xx or 5xx HTTP status code do I have?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where QUERY_STRING(['`span.attributes.http@status_code`'], '4* OR 5*')\n| stats COUNT() as error_logs_cnt",
    "type": "1"
  },
  {
    "question": "Count the number of logs with an HTTP status code of 500.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs | where \"`span.attributes.http@status_code`\" = \"500\" | stats count() as cnt_500_status",
    "type": "1"
  },
  {
    "question": "How many logs from the frontend service for the HTTP GET method have a status code of 200 in the last 24 hours?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where `resource.attributes.service@name` = \"frontend\" \n  AND `span.attributes.http@method` = \"GET\"\n  AND `span.attributes.http@status_code` = \"200\"\n  AND startTime > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| stats COUNT() as log_count",
    "type": "1"
  },
  {
    "question": "How many flights have a distance greater than 10,000 miles?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where DistanceMiles > 10000\n| stats count() as long_distance_flights",
    "type": "1"
  },
  {
    "question": "How many flights to Sydney do I have?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight | where DestCityName = 'Sydney' | stats COUNT() as flights_to_sydney",
    "type": "1"
  },
  {
    "question": "How many flights with destination to Sydney do I have?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight | where DestCityName = 'Sydney' | stats COUNT() as sydney_flight_count",
    "type": "1"
  },
  {
    "question": "How many flights with cancelled status do I have?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight | where Cancelled=true | stats count() as cancelled_flights",
    "type": "1"
  },
  {
    "question": "How many logs have error status code in the last week?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where @timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY) \n| where QUERY_STRING(['http.response.status_code'], '4* OR 5*')\n| stats COUNT() as error_logs_7days",
    "type": "1"
  },
  {
    "question": "How many 4xx and 5xx errors do I have?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log | where QUERY_STRING(['http.response.status_code'], '4* OR 5*') | stats COUNT() as error_cnt",
    "type": "1"
  },
  {
    "question": "How many error logs do I have from the last week?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where @timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK) \n| where QUERY_STRING(['http.response.status_code'], '4* OR 5*')\n| stats count() as error_logs",
    "type": "1"
  },
  {
    "question": "How many logs have a 4xx or 5xx HTTP status code in the last week?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where QUERY_STRING(['http.response.status_code'], '4* OR 5*')  \n| where @timestamp >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats COUNT() as error_logs_count",
    "type": "1"
  },
  {
    "question": "How many orders have a customer whose first name starts with 'E'?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce | where LIKE(customer_first_name, 'E%') | stats COUNT() as cnt",
    "type": "1"
  },
  {
    "question": "How many orders do I have for the \"Men's Clothing\" category?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce | where category = \"Men's Clothing\" | stats COUNT() as category_count",
    "type": "1"
  },
  {
    "question": "How many orders whose customer's first name starts with 'E'?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce | where LIKE(customer_first_name, 'E%') | stats COUNT() as cnt",
    "type": "1"
  },
  {
    "question": "How many products with manufacturer \"Elitelligence\" do I have?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce | where manufacturer = 'Elitelligence' | stats count() as elitelligence_product_count",
    "type": "1"
  },
  {
    "question": "How many logs have a user agent that starts with \"Mozilla\"?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index | where LIKE(agent, 'Mozilla%') | stats COUNT() as mozilla_agent_count",
    "type": "1"
  },
  {
    "question": "How many logs have a response code of \"500\"?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index | where response = '500' | stats COUNT() as error_500_count",
    "type": "1"
  },
  {
    "question": "How many 4xx and 5xx errors do I have in the last week?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index \n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK) \n| where QUERY_STRING(['response'], '4* OR 5*')\n| stats count() as error_cnt",
    "type": "1"
  },
  {
    "question": "Count the number of logs with a request that contains \"opensearch\" in the last 5 minutes.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index \n| where QUERY_STRING(['request'], '%opensearch%') \n| where timestamp > DATE_SUB(NOW(), INTERVAL 5 MINUTE)\n| stats COUNT() as opensearch_requests",
    "type": "1"
  },
  {
    "question": "How many unique client IP addresses were recorded in the last 7 days?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(resource.attributes.ip) as unique_ips",
    "type": "2"
  },
  {
    "question": "Find the number of unique HTTP status codes for requests received yesterday.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where DATE(endTime) = DATE_SUB(NOW(), INTERVAL 1 DAY)\n| stats DISTINCT_COUNT(`span.attributes.http@status_code`) as unique_status_codes",
    "type": "2"
  },
  {
    "question": "Display the number of unique HTTP status codes for requests made in the last 24 hours.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where startTime > DATE_SUB(NOW(), INTERVAL 1 DAY) \n| stats DISTINCT_COUNT(\"`span.attributes.http@status_code`\") as unique_status_codes",
    "type": "2"
  },
  {
    "question": "How many distinct HTTP status codes were seen in the last week's logs?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 WEEK)  \n| stats DISTINCT_COUNT(`span.attributes.http@status_code`) as unique_status_codes",
    "type": "2"
  },
  {
    "question": "How many unique agents accessed the website in the last 7 days?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where utc_time >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(agent) as unique_agents",
    "type": "2"
  },
  {
    "question": "How many Unique response status code with response status code not equal to 200?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where response != '200'\n| stats DISTINCT_COUNT(response) as unique_status_codes",
    "type": "2"
  },
  {
    "question": "How many unique agent values are there for logs that have a response code of \"200\"?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where response = \"200\"\n| stats DISTINCT_COUNT(agent) as unique_agents",
    "type": "2"
  },
  {
    "question": "How many unique agents accessed the website in the last 7 days?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where utc_time >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(agent) as unique_agents",
    "type": "2"
  },
  {
    "question": "How many unique manufacturers with products in the \"Men's Clothing\" category?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where category = \"Men's Clothing\" \n| stats DISTINCT_COUNT(products.manufacturer) as unique_manufacturers\n| fields unique_manufacturers",
    "type": "2"
  },
  {
    "question": "How many unique customers had orders placed in the last week?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(customer_id) as unique_customers",
    "type": "2"
  },
  {
    "question": "How many unique customers made orders in the last week?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(customer_id) as unique_customers",
    "type": "2"
  },
  {
    "question": "How many unique customers made orders in the last week?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(customer_id) as unique_customers",
    "type": "2"
  },
  {
    "question": "How many unique event types were recorded for frontend.access logs in the production namespace last week?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where attributes.data_stream.namespace = \"production\" \n  AND attributes.data_stream.dataset = \"frontend.access\"\n  AND @timestamp >= DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| stats DISTINCT_COUNT(event.type) as unique_event_types",
    "type": "2"
  },
  {
    "question": "How many unique source IP addresses were accessed in the last 7 days?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where @timestamp >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(communication.source.ip) as unique_source_ips",
    "type": "2"
  },
  {
    "question": "How many unique events occurred in the frontend service last week?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where @timestamp >= DATE_SUB(NOW(), INTERVAL 7 DAY) AND @timestamp < NOW()\n| stats DISTINCT_COUNT(event.name) as unique_events",
    "type": "2"
  },
  {
    "question": "How many unique communication source IP addresses were recorded in the logs last week?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where @timestamp >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats DISTINCT_COUNT(communication.source.ip) as unique_source_ips",
    "type": "2"
  },
  {
    "question": "How many unique Carrier with flights from Frankfurt am Main Airport?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where Origin = \"Frankfurt am Main Airport\"\n| stats DISTINCT_COUNT(Carrier) as unique_carriers",
    "type": "2"
  },
  {
    "question": "How many unique origin airports for flights that originated in Germany?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where OriginCountry = \"DE\"\n| stats DISTINCT_COUNT(OriginAirportID) as unique_origin_airports",
    "type": "2"
  },
  {
    "question": "How many unique Carrier with Cancelled flights?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where Cancelled = true\n| stats DISTINCT_COUNT(Carrier) as unique_carriers",
    "type": "2"
  },
  {
    "question": "How many unique destination airports for flights last week?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| stats DISTINCT_COUNT(DestAirportID) as unique_dest_airports",
    "type": "2"
  },
  {
    "question": "List all fields related to HTTP request details where the status code is not 200.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where \"`span.attributes.http@status_code`\" != \"200\"\n| fields `span.attributes.http@method`, `span.attributes.http@url`, `span.attributes.http@status_code`",
    "type": "3"
  },
  {
    "question": "List all the status codes and their corresponding count for the HTTP requests received in the last hour.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where startTime > DATE_SUB(NOW(), INTERVAL 1 HOUR)\n| stats COUNT() AS count by `span.attributes.http@status_code`\n| fields `span.attributes.http@status_code`, count",
    "type": "3"
  },
  {
    "question": "List all trace IDs for successful HTTP requests in the last 24 hours.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where \"`span.attributes.http@status_code`\" = \"200\" AND endTime > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| fields traceId",
    "type": "3"
  },
  {
    "question": "List all the URLs accessed by the frontend service in the last 5 minutes.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where `resource.attributes.service@name` = \"frontend\" AND endTime > DATE_SUB(NOW(), INTERVAL 5 MINUTE)\n| fields `span.attributes.http@url`",
    "type": "3"
  },
  {
    "question": "List all the request URLs for the logs where the response code is not successful (i.e., not 200).",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where response != \"200\"\n| fields url",
    "type": "3"
  },
  {
    "question": "List the URL and request fields for all documents with a client IP from India in the last 7 days.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where geo.src=\"IN\" and timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| fields url, request",
    "type": "3"
  },
  {
    "question": "List all URLs along with the HTTP response codes for requests made in the last 24 hours.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| fields url, response",
    "type": "3"
  },
  {
    "question": "List all messages and timestamps for log entries with response code not equal to 200.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where response != \"200\"\n| fields message, timestamp",
    "type": "3"
  },
  {
    "question": "List all HTTP response status codes with error status.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where QUERY_STRING(['http.response.status_code'], '4* OR 5*')\n| fields http.response.status_code",
    "type": "3"
  },
  {
    "question": "List all HTTP response status codes with status code not equal to 200.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where http.response.status_code != \"200\"\n| fields http.response.status_code",
    "type": "3"
  },
  {
    "question": "List all HTTP response status codes with status code not equal to 200.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where http.response.status_code != \"200\"\n| fields http.response.status_code",
    "type": "3"
  },
  {
    "question": "List all HTTP request methods with access event type.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where event.type = \"access\"\n| fields http.request.method",
    "type": "3"
  },
  {
    "question": "List the number of flights that departed from Frankfurt am Main Airport (FRA) last week.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where OriginAirportID = \"FRA\" \n| where timestamp >= DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| stats count() as total_flights",
    "type": "3"
  },
  {
    "question": "List all flights from Frankfurt to Sydney with a distance greater than 10,000 kilometers.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight \n| where OriginCityName = \"Frankfurt am Main\" AND DestCityName = \"Sydney\" AND DistanceKilometers > 10000\n| fields Carrier, Origin, Dest, DistanceKilometers",
    "type": "3"
  },
  {
    "question": "List all flights that departed from Frankfurt am Main Airport on a sunny day.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where OriginCityName = \"Frankfurt am Main\" AND OriginWeather = \"Sunny\"\n| fields Carrier, Dest, DestCityName, DistanceKilometers, FlightNum, Origin, OriginCityName, OriginWeather, timestamp",
    "type": "3"
  },
  {
    "question": "List all flights that departed from Frankfurt am Main Airport with a distance over 10,000 kilometers.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where Origin = \"Frankfurt am Main Airport\" AND DistanceKilometers > 10000\n| fields AvgTicketPrice, Cancelled, Carrier, Dest, DestAirportID, DestCityName, DestCountry, DestLocation, DestRegion, DestWeather, DistanceKilometers, DistanceMiles, FlightDelay, FlightDelayMin, FlightDelayType, FlightNum, FlightTimeHour, FlightTimeMin, Origin, OriginAirportID, OriginCityName, OriginCountry, OriginLocation, OriginRegion, OriginWeather, dayOfWeek, timestamp",
    "type": "3"
  },
  {
    "question": "List all products and their manufacturers for orders placed in the last week.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| fields products.product_name, products.manufacturer",
    "type": "3"
  },
  {
    "question": "List all customer first and last name, email, and order date for orders placed in the last week.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| fields customer_first_name, customer_last_name, email, order_date",
    "type": "3"
  },
  {
    "question": "Show the customer's full name and email address for customers who made purchases last week.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| fields customer_full_name, email",
    "type": "3"
  },
  {
    "question": "Get the customer full name, order date, and total quantity for orders placed by male customers in the last week.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where customer_gender = \"MALE\" AND order_date > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| fields customer_full_name, order_date, total_quantity",
    "type": "3"
  },
  {
    "question": "List all unique HTTP status codes for requests made in the last 24 hours.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| dedup `span.attributes.http@status_code`\n| fields `span.attributes.http@status_code`",
    "type": "4"
  },
  {
    "question": "List all unique HTTP status codes for requests made in the last hour.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where startTime > DATE_SUB(NOW(), INTERVAL 1 HOUR)\n| dedup `span.attributes.http@status_code`\n| fields `span.attributes.http@status_code`",
    "type": "4"
  },
  {
    "question": "List all unique trace IDs for logs with a non-zero status code.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where status.code != 0\n| dedup traceId\n| fields traceId",
    "type": "4"
  },
  {
    "question": "List all unique response codes for requests made in the last 1 hour.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where startTime > DATE_SUB(NOW(), INTERVAL 1 HOUR)\n| dedup `span.attributes.http@status_code`\n| fields `span.attributes.http@status_code`",
    "type": "4"
  },
  {
    "question": "List all unique manufacturer with products that have a price greater than 50 EUR.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where products.price > 50\n| dedup products.manufacturer\n| fields products.manufacturer",
    "type": "4"
  },
  {
    "question": "List all unique customer first names with orders placed in the last 7 days.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| dedup customer_first_name\n| fields customer_first_name",
    "type": "4"
  },
  {
    "question": "List all unique customer first names with orders placed in the last week.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| dedup customer_first_name\n| fields customer_first_name",
    "type": "4"
  },
  {
    "question": "List all unique manufacturer with orders in the last 7 days.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| dedup manufacturer\n| fields manufacturer",
    "type": "4"
  },
  {
    "question": "List all unique user agents with visits from India in the last 7 days.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where geo.src = \"IN\"\n| where timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| dedup agent\n| fields agent",
    "type": "4"
  },
  {
    "question": "List all unique user agents with logs from last week.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where utc_time >= DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| dedup agent\n| fields agent",
    "type": "4"
  },
  {
    "question": "List all unique client IP addresses for logs with response code 404 in the last week.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where response = \"404\" AND utc_time > DATE_SUB(NOW(), INTERVAL 7 DAY)  \n| dedup clientip\n| fields clientip",
    "type": "4"
  },
  {
    "question": "List all unique extensions with requests containing \"opensearch\" in the log_index.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where LIKE(request, '%opensearch%')\n| dedup extension\n| fields extension",
    "type": "4"
  },
  {
    "question": "List all unique Carrier with flights that have a flight delay.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where FlightDelay = true\n| dedup Carrier\n| fields Carrier",
    "type": "4"
  },
  {
    "question": "List all unique Carrier with cancelled flights.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight \n| where Cancelled = true\n| dedup Carrier\n| fields Carrier",
    "type": "4"
  },
  {
    "question": "List all unique DestCountry for flights with distance over 10,000 kilometers.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where DistanceKilometers > 10000\n| dedup DestCountry\n| fields DestCountry",
    "type": "4"
  },
  {
    "question": "List all unique destination countries for flights that were delayed.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where FlightDelay = true\n| dedup DestCountry\n| fields DestCountry",
    "type": "4"
  },
  {
    "question": "List all unique HTTP response status codes for access logs with HTTP response status code not equal to 200.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where http.response.status_code != \"200\"\n| dedup http.response.status_code\n| fields http.response.status_code",
    "type": "4"
  },
  {
    "question": "List all unique HTTP response status codes in logs from the last 7 days.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where @timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| dedup http.response.status_code\n| fields http.response.status_code",
    "type": "4"
  },
  {
    "question": "List all unique HTTP request methods with requests from IP address '10.0.0.97':",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where communication.source.ip = \"10.0.0.97\"\n| dedup http.request.method\n| fields http.request.method",
    "type": "4"
  },
  {
    "question": "Generate a list of unique datasets with events that have a 4xx or 5xx status code.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where QUERY_STRING(['http.response.status_code'], '4* OR 5*')\n| fields attributes.data_stream.dataset\n| dedup attributes.data_stream.dataset",
    "type": "4"
  },
  {
    "question": "Find the average duration of HTTP GET requests for the '/jquery-3.1.1.min.js' URL over the last 24 hours.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where \"`span.attributes.http@url`\" = \"/jquery-3.1.1.min.js\" AND \"`span.attributes.http@method`\" = \"GET\" AND endTime >= DATE_SUB(NOW(), INTERVAL 1 DAY)\n| stats avg(durationInNanos) as avg_duration",
    "type": "5"
  },
  {
    "question": "Find the maximum duration of spans where the HTTP status code is not successful (i.e., not 200).",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where \"`span.attributes.http@status_code`\" != \"200\"\n| stats max(durationInNanos) as max_duration",
    "type": "5"
  },
  {
    "question": "Find the maximum duration of server-side HTTP requests received by the frontend service in the last 24 hours.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where `resource.attributes.service@name` = \"frontend\" AND kind = \"SPAN_KIND_SERVER\"\n| where endTime >= DATE_SUB(NOW(), INTERVAL 1 DAY)\n| stats max(durationInNanos) as max_duration",
    "type": "5"
  },
  {
    "question": "Get the average duration of server-side HTTP requests for the frontend service in the last 24 hours.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where `resource.attributes.service@name` = \"frontend\" AND kind = \"SPAN_KIND_SERVER\"\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 DAY) \n| stats avg(durationInNanos) as avg_duration_nanos",
    "type": "5"
  },
  {
    "question": "What is the average AvgTicketPrice of the flights with Cancelled status?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where Cancelled = true\n| stats avg(AvgTicketPrice) as avg_ticket_price",
    "type": "5"
  },
  {
    "question": "Find the maximum DistanceKilometers for flights that were delayed.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where FlightDelay = true\n| stats max(DistanceKilometers) as max_distance_km",
    "type": "5"
  },
  {
    "question": "Find the average AvgTicketPrice for flights with destination country as 'AU'.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where DestCountry = \"AU\"\n| stats avg(AvgTicketPrice) as average_ticket_price",
    "type": "5"
  },
  {
    "question": "Find the maximum DistanceKilometers for flights that originated from Frankfurt am Main Airport.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where Origin = \"Frankfurt am Main Airport\" \n| stats max(DistanceKilometers) as max_distance_km",
    "type": "5"
  },
  {
    "question": "Find the average HTTP response bytes for successful web access events in the last 7 days.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where event.result = \"success\" AND event.category = \"web\" AND @timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats avg(http.response.bytes) as avg_response_bytes",
    "type": "5"
  },
  {
    "question": "Find the average HTTP response size for successful requests in the last 7 days.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where http.response.status_code = \"200\" \n| where @timestamp >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats AVG(http.response.bytes) as avg_response_size",
    "type": "5"
  },
  {
    "question": "Find the average HTTP response bytes for successful requests (HTTP response status code 200) in the last 24 hours.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where http.response.status_code = \"200\"\n| where @timestamp > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| stats AVG(http.response.bytes) as avg_bytes",
    "type": "5"
  },
  {
    "question": "Calculate the average HTTP response bytes for successful requests with requests from production environment in the last 7 days.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where attributes.data_stream.namespace = \"production\" \n    AND event.result = \"success\"\n    AND @timestamp >= DATE_SUB(NOW(), INTERVAL 7 DAY) \n| stats avg(http.response.bytes) as avg_response_bytes",
    "type": "5"
  },
  {
    "question": "What is the average bytes of the logs with response code 200?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where response = \"200\"\n| stats avg(bytes) as avg_bytes",
    "type": "5"
  },
  {
    "question": "Find the average bytes of log entries with requests to the \"/opensearch/opensearch-1.0.0.deb\" endpoint.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where request = \"/opensearch/opensearch-1.0.0.deb\"\n| stats avg(bytes) as avg_bytes",
    "type": "5"
  },
  {
    "question": "Calculate the average bytes of logs where the request extension is \"deb\" and the response status code is \"200\".",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where extension = \"deb\" AND response = \"200\"\n| stats avg(bytes) as average_bytes",
    "type": "5"
  },
  {
    "question": "Find the average bytes of logs where the request extension is \"deb\" and the response status code is \"200\".",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| where extension = \"deb\" and response = \"200\"  \n| stats avg(bytes) as avg_bytes",
    "type": "5"
  },
  {
    "question": "Calculate the average price of products with a discount percentage greater than 50%.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where products.discount_percentage > 50\n| stats avg(products.price) as average_price",
    "type": "5"
  },
  {
    "question": "Calculate the average price of products with manufacturer as \"Elitelligence\".",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce \n| where products.manufacturer = \"Elitelligence\"\n| stats avg(products.price) as average_price",
    "type": "5"
  },
  {
    "question": "Find the average price of all products.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| stats AVG(products.price) as avg_product_price",
    "type": "5"
  },
  {
    "question": "Find the average price of products purchased by customers from Egypt last week.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where geoip.country_iso_code = \"EG\" \n| where order_date > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| stats avg(products.price) as avg_product_price",
    "type": "5"
  },
  {
    "question": "Show me the top 5 services that had the most failed requests (status code not 200) in the last hour.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where startTime > DATE_SUB(NOW(), INTERVAL 1 HOUR)\n| where `span.attributes.http@status_code` != '200'\n| stats count() as failed_requests by `resource.attributes.service@name`\n| sort -failed_requests\n| head 5\n| fields `resource.attributes.service@name`, failed_requests",
    "type": "6"
  },
  {
    "question": "Show me the top 5 most accessed URLs with HTTP status code 200 in the last 24 hours.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where `span.attributes.http@status_code` = \"200\" AND endTime > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| stats COUNT() AS count BY `span.attributes.http@url`\n| sort -count\n| head 5\n| fields `span.attributes.http@url`, count",
    "type": "6"
  },
  {
    "question": "Show me the top 5 URLs requested by the frontend service in the last 3 days, ordered by the number of requests.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where `resource.attributes.service@name` = \"frontend\" AND endTime > DATE_SUB(NOW(), INTERVAL 3 DAY)\n| stats COUNT() AS request_count BY `span.attributes.http@url`\n| sort -request_count\n| head 5\n| fields `span.attributes.http@url`, request_count",
    "type": "6"
  },
  {
    "question": "List the top 3 URLs that had the highest response time in the last hour.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 HOUR)\n| eval url = `span.attributes.http@url`\n| stats max(durationInNanos) as max_duration by url\n| sort - max_duration\n| head 3\n| fields url, max_duration",
    "type": "6"
  },
  {
    "question": "Show me the top 5 DestCityName with Cancelled = false.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where Cancelled = false\n| stats count() as cnt by DestCityName\n| sort -cnt\n| head 5\n| fields DestCityName, cnt",
    "type": "6"
  },
  {
    "question": "Show me the top 5 destinations with the highest average ticket price.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| stats avg(AvgTicketPrice) as avg_ticket_price by Dest\n| sort - avg_ticket_price\n| head 5\n| fields Dest, avg_ticket_price",
    "type": "6"
  },
  {
    "question": "Show me the top 5 DestCityName with Cancelled=true.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where Cancelled=true\n| stats count() as total_count by DestCityName\n| sort - total_count\n| head 5\n| fields DestCityName, total_count",
    "type": "6"
  },
  {
    "question": "Show me the top 3 flights with the highest AvgTicketPrice.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| sort -AvgTicketPrice\n| head 3\n| fields FlightNum, AvgTicketPrice",
    "type": "6"
  },
  {
    "question": "Show me the top 5 IP addresses with the most log entries.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| stats count() as total by communication.source.ip\n| sort - total\n| head 5\n| fields communication.source.ip, total",
    "type": "6"
  },
  {
    "question": "Show me the top 5 events with error status code in the last 7 days.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where http.response.status_code != \"200\"\n| where @timestamp >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats count() as total by event.name\n| sort - total\n| head 5\n| fields event.name, total",
    "type": "6"
  },
  {
    "question": "Show me the top 5 source IP addresses with the most access logs.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| stats count() as total_count by communication.source.ip\n| sort -total_count\n| head 5\n| fields communication.source.ip, total_count",
    "type": "6"
  },
  {
    "question": "Show me the top 10 most accessed URLs in the last 7 days.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where @timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats count() as total by http.url\n| sort - total\n| head 10\n| fields http.url, total",
    "type": "6"
  },
  {
    "question": "Show me the top 5 hosts with the most bytes.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| stats sum(bytes) as total_bytes by host\n| sort - total_bytes\n| head 5\n| fields host, total_bytes",
    "type": "6"
  },
  {
    "question": "Show me the top 10 hosts with the most bytes transferred.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| stats sum(bytes) as total_bytes by host\n| sort -total_bytes\n| head 10\n| fields host, total_bytes",
    "type": "6"
  },
  {
    "question": "Show me the top 10 hosts with the most requests.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| stats count() as request_count by host\n| sort -request_count\n| head 10\n| fields host, request_count",
    "type": "6"
  },
  {
    "question": "Show me the top 5 requests with the most bytes.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| sort - bytes\n| head 5\n| fields request, bytes",
    "type": "6"
  },
  {
    "question": "Show me the top 5 categories with the most order quantity.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| stats sum(products.quantity) as total_quantity by category\n| sort - total_quantity\n| head 5\n| fields category, total_quantity",
    "type": "6"
  },
  {
    "question": "Show me the top 3 categories with the highest total quantity.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| stats sum(total_quantity) as total_quantity by category\n| sort -total_quantity\n| head 3\n| fields category, total_quantity",
    "type": "6"
  },
  {
    "question": "Show me the top 5 customers by total number of orders.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| stats count() as total_orders by customer_id\n| sort - total_orders\n| head 5\n| fields customer_id, total_orders",
    "type": "6"
  },
  {
    "question": "Show me the top 5 categories with the most orders.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| stats count() as order_count by category\n| sort - order_count\n| head 5\n| fields category, order_count",
    "type": "6"
  },
  {
    "question": "Show me the weekly trend of document counts for logs with an HTTP GET status code of 200 in the last month.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs \n| where `span.attributes.http@status_code` = \"200\" AND `span.attributes.http@method` = \"GET\" AND endTime > DATE_SUB(NOW(), INTERVAL 1 MONTH)\n| stats count() as log_count by span(endTime, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of the number of logs in the last month.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 MONTH)\n| stats count() as log_count by span(endTime, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of the number of logs with error status code (non-200) in the last month.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 MONTH) AND `span.attributes.http@status_code` != \"200\"\n| stats COUNT() as error_logs by SPAN(endTime, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the monthly average duration of traces for the last 6 months.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs \n| where endTime > DATE_SUB(NOW(), INTERVAL 6 MONTH)\n| stats AVG(durationInNanos) as avg_duration by span(endTime, 1M)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of the total number of orders.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce | stats count() as total_orders by span(order_date, 1w)",
    "type": "7"
  },
  {
    "question": "Can you show me the weekly average taxless total price summary in the last half year?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce \n| where order_date > DATE_SUB(NOW(), INTERVAL 6 MONTH)\n| stats AVG(taxless_total_price) as weekly_avg_price \nby span(order_date, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of the total number of orders in the last 3 months.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| where order_date > DATE_SUB(NOW(), INTERVAL 3 MONTH)\n| stats count() as total_orders by span(order_date, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the weekly average taxless total price summary in the last half year.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce \n| where order_date > DATE_SUB(NOW(), INTERVAL 6 MONTH)\n| stats AVG(taxless_total_price) as weekly_avg_price \nby span(order_date, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of unique users accessing the application in the last month.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log | where @timestamp > DATE_SUB(NOW(), INTERVAL 1 MONTH) | stats DISTINCT_COUNT(communication.source.ip) as unique_users by span(@timestamp, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of HTTP response status codes in the last month.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where @timestamp > DATE_SUB(NOW(), INTERVAL 1 MONTH)\n| stats count() as total_count by span(@timestamp, 1w), http.response.status_code\n| sort - total_count",
    "type": "7"
  },
  {
    "question": "Generate a weekly trend of successful login events in the sso_log index.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where event.result = \"success\" \n| stats count() as successful_logins \nby span(@timestamp, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the daily trend of HTTP response status codes in the last week.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log\n| where @timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| stats count() as count \n  by span(@timestamp, 1d), http.response.status_code",
    "type": "7"
  },
  {
    "question": "Show me the daily trend of the total flight distance in the last month.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 MONTH)\n| eval total_distance = DistanceKilometers\n| stats sum(total_distance) as daily_total_distance by span(timestamp, 1d)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of the average DistanceKilometers in the last 3 months.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight | where timestamp > DATE_SUB(NOW(), INTERVAL 3 MONTH) | stats AVG(DistanceKilometers) as weekly_avg_distance by span(timestamp, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the weekly trend of total flight count in the last month.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 MONTH)\n| stats COUNT() as flight_count\nby span(timestamp, 1w)",
    "type": "7"
  },
  {
    "question": "Show me the monthly trend of the number of cancelled flights in the last year.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight\n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 YEAR)\n| stats COUNT() as cancelled_flights by span(timestamp, 1m)\n| where Cancelled=true",
    "type": "7"
  },
  {
    "question": "Show me the monthly trend of the number of documents in the last 6 months.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index | where timestamp > DATE_SUB(NOW(), INTERVAL 6 MONTH) | stats count() as document_count by span(timestamp, 1M)",
    "type": "7"
  },
  {
    "question": "Show me the daily trend of website traffic in the last week.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index \n| where timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| stats count() as daily_traffic by span(timestamp, 1d)",
    "type": "7"
  },
  {
    "question": "Show me the monthly trend of total bytes transferred for the logs from the last 3 months.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index \n| where timestamp > DATE_SUB(NOW(), INTERVAL 3 MONTH)\n| stats sum(bytes) as total_bytes by span(timestamp, 1M)",
    "type": "7"
  },
  {
    "question": "Show me the daily trend of total 404 errors in the last week.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index \n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK) \n| where QUERY_STRING(['response'], '404')\n| stats count() as total_404_errors\nby span(timestamp, 1d)",
    "type": "7"
  },
  {
    "question": "What is the ratio of logs with status code not equal to 200 in the last 24 hours?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| eval is_error=IF(LIKE(`span.attributes.http@status_code`, '200'), 0, 1) \n| stats AVG(is_error) as error_ratio",
    "type": "8"
  },
  {
    "question": "What is the ratio of logs related to the HTTP GET method in the last 5 minutes?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where startTime > DATE_SUB(NOW(), INTERVAL 5 MINUTE)\n| eval is_get_method = IF(LIKE(`span.attributes.http@method`, 'GET'), 1.0, 0.0)\n| stats AVG(is_get_method) as ratio_get_method",
    "type": "8"
  },
  {
    "question": "Find the ratio of logs in the last 24 hours that have an HTTP status code not equal to 200.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 1 DAY)\n| eval is_not_200 = IF(LIKE(`span.attributes.http@status_code`, '200'), 0.0, 1.0)\n| stats AVG(is_not_200) as ratio_not_200",
    "type": "8"
  },
  {
    "question": "What is the ratio of logs that have an HTTP status code of 500 in the last 7 days?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "source=otel_logs\n| where endTime > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| eval is_500=IF(LIKE('`span.attributes.http@status_code`', '500'), 1.0, 0.0)\n| stats AVG(is_500) as ratio_500",
    "type": "8"
  },
  {
    "question": "What is the ratio of flights with destination weather being rain in the last 2 months?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight \n| where timestamp > DATE_SUB(NOW(), INTERVAL 2 MONTH)\n| eval is_rain = IF(LIKE(DestWeather, 'rain'), 1.0, 0.0)\n| stats AVG(is_rain) as rain_ratio",
    "type": "8"
  },
  {
    "question": "Find the ratio of flights that were canceled in the last 3 months.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight \n| where timestamp > DATE_SUB(NOW(), INTERVAL 3 MONTH)\n| eval is_cancelled=IF(Cancelled, 1.0, 0.0)\n| stats AVG(is_cancelled) as cancelled_ratio",
    "type": "8"
  },
  {
    "question": "Find the ratio of flights where the origin country is Germany in the last 3 months.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight \n| where timestamp > DATE_SUB(NOW(), INTERVAL 3 MONTH)\n| eval is_origin_de = IF(LIKE(OriginCountry, 'DE'), 1.0, 0.0)\n| stats AVG(is_origin_de) as origin_de_ratio",
    "type": "8"
  },
  {
    "question": "Find the ratio of flight delays in the last week.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "source=flight \n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| eval is_delayed = IF(FlightDelay, 1.0, 0.0)\n| stats AVG(is_delayed) as delay_ratio",
    "type": "8"
  },
  {
    "question": "What is the ratio of orders where the customer's last name is 'Underwood'?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce \n| eval is_underwood = IF(LIKE(customer_last_name, 'underwood'), 1.0, 0.0)\n| stats AVG(is_underwood) as underwood_ratio",
    "type": "8"
  },
  {
    "question": "What is the ratio of orders where the customer gender is MALE?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| eval is_male = if(customer_gender = 'MALE', 1.0, 0.0)\n| stats avg(is_male) as ratio_male_orders",
    "type": "8"
  },
  {
    "question": "What is the ratio of orders made on Mondays in the last week?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce \n| where order_date > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| eval is_monday=IF(LIKE(day_of_week, 'Monday'), 1.0, 0.0)\n| stats AVG(is_monday) as monday_ratio",
    "type": "8"
  },
  {
    "question": "Can you tell me the ratio of orders where the customer's first name starts with 'E'?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "source=ecommerce\n| eval is_start_with_e = IF(LIKE(customer_first_name, 'E%'), 1.0, 0.0)\n| stats AVG(is_start_with_e) as ratio_of_orders_with_e_firstname",
    "type": "8"
  },
  {
    "question": "What is the ratio of 5xx response codes in the last week?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index \n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| eval is_5xx = IF(LIKE(response, '5%'), 1.0, 0.0)\n| stats AVG(is_5xx) as five_xx_ratio",
    "type": "8"
  },
  {
    "question": "What is the ratio of log entries where the request extension is 'deb' in the last month?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index \n| where timestamp > DATE_SUB(NOW(), INTERVAL 1 MONTH)\n| eval is_deb = IF(LIKE(extension, 'deb'), 1.0, 0.0)\n| stats AVG(is_deb) as deb_ratio",
    "type": "8"
  },
  {
    "question": "Calculate the ratio of logs where the agent starts with \"Mozilla\".",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index\n| eval is_mozilla = IF(LIKE(agent, 'Mozilla%'), 1.0, 0.0)\n| stats AVG(is_mozilla) as mozilla_ratio",
    "type": "8"
  },
  {
    "question": "Calculate the ratio of documents with a machine.os of \"win 8\" in the last 30 days.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "source=log_index | where timestamp > DATE_SUB(NOW(), INTERVAL 30 DAY) | eval is_win8 = IF(LIKE(machine.os, 'win 8'), 1.0, 0.0) | stats AVG(is_win8) as win8_ratio",
    "type": "8"
  },
  {
    "question": "Find the ratio of logs where the event.category is \"web\" in the last 7 days.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where @timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n| eval is_web = IF(LIKE(event.category, 'web'), 1.0, 0.0)\n| stats AVG(is_web) as web_ratio",
    "type": "8"
  },
  {
    "question": "Calculate the ratio of logs where the URL contains \"api\" in the last week.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log | where @timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK) | eval has_api=IF(LIKE(http.url, '%api%'), 1.0, 0.0) | stats AVG(has_api) as ratio_with_api",
    "type": "8"
  },
  {
    "question": "Find the ratio of logs where the request URL contains the word \"recommendations\" in the last week.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| where @timestamp > DATE_SUB(NOW(), INTERVAL 1 WEEK)\n| eval is_recommendations = IF(LIKE(http.url, '%recommendations%'), 1.0, 0.0)\n| stats AVG(is_recommendations) as recommendations_ratio",
    "type": "8"
  },
  {
    "question": "Find the ratio of logs where the source IP address starts with \"10.0.0.\"",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "source=sso_log \n| eval is_start_with_10_0_0 = IF(LIKE('communication.source.ip', '10.0.0.%'), 1.0, 0.0)\n| stats AVG(is_start_with_10_0_0) as ratio_of_10_0_0_source_ip",
    "type": "8"
  },
  {
    "question": "Describe the otel_logs index.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs",
    "type": "9"
  },
  {
    "question": "Describe the otel_logs index and show all available fields.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "Describe the index schema for the OpenSearch index \"otel_logs\".",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs",
    "type": "9"
  },
  {
    "question": "Describe the schema and field mappings of the 'otel_logs' index.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs",
    "type": "9"
  },
  {
    "question": "Describe the metadata of the \"flight\" index.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "describe flight",
    "type": "9"
  },
  {
    "question": "Can you show me metadata of index?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "describe flight",
    "type": "9"
  },
  {
    "question": "What are the fields available in the flight index?",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "describe flight | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "List all the field names available in the 'flight' index.",
    "table_info": "\n- AvgTicketPrice: float (841.2656419677076)\n- Cancelled: boolean (false)\n- Carrier: keyword (\"OpenSearch Dashboards Airlines\")\n- Dest: keyword (\"Sydney Kingsford Smith International Airport\")\n- DestAirportID: keyword (\"SYD\")\n- DestCityName: keyword (\"Sydney\")\n- DestCountry: keyword (\"AU\")\n- DestLocation: geo_point ({\"lon\":\"151.177002\",\"lat\":\"-33.94609833\"})\n- DestRegion: keyword (\"SE-BD\")\n- DestWeather: keyword (\"Rain\")\n- DistanceKilometers: float (16492.32665375846)\n- DistanceMiles: float (10247.856675613455)\n- FlightDelay: boolean (false)\n- FlightDelayMin: integer (0)\n- FlightDelayType: keyword (\"No Delay\")\n- FlightNum: keyword (\"9HY9SWR\")\n- FlightTimeHour: keyword (17.179506930998397)\n- FlightTimeMin: float (1030.7704158599038)\n- Origin: keyword (\"Frankfurt am Main Airport\")\n- OriginAirportID: keyword (\"FRA\")\n- OriginCityName: keyword (\"Frankfurt am Main\")\n- OriginCountry: keyword (\"DE\")\n- OriginLocation: geo_point ({\"lon\":\"8.570556\",\"lat\":\"50.033333\"})\n- OriginRegion: keyword (\"DE-HE\")\n- OriginWeather: keyword (\"Sunny\")\n- dayOfWeek: integer (0)\n- timestamp: date (\"2024-04-08T00:00:00\")\n\n",
    "target_index": "flight",
    "query": "describe flight | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "Describe my index.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log",
    "type": "9"
  },
  {
    "question": "Describe the sso_log index.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log",
    "type": "9"
  },
  {
    "question": "Describe the sso_log index.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log",
    "type": "9"
  },
  {
    "question": "Can you show me the field names I could use in queries for the sso_log index?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "Describe my index.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "describe ecommerce",
    "type": "9"
  },
  {
    "question": "Can I show the field name I could query in the index?",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "describe ecommerce | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "Describe my index.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "describe ecommerce",
    "type": "9"
  },
  {
    "question": "Describe the ecommerce index fields.",
    "table_info": "\n- category: text ([\"Men\\u0027s Clothing\"])\n- currency: keyword (\"EUR\")\n- customer_birth_date: date ()\n- customer_first_name: text (\"Eddie\")\n- customer_full_name: text (\"Eddie Underwood\")\n- customer_gender: keyword (\"MALE\")\n- customer_id: keyword (38)\n- customer_last_name: text (\"Underwood\")\n- customer_phone: keyword (\"\")\n- day_of_week: keyword (\"Monday\")\n- day_of_week_i: integer (0)\n- email: keyword (\"eddie@underwood-family.zzz\")\n- event.dataset: keyword (\"sample_ecommerce\")\n- geoip.city_name: keyword (\"Cairo\")\n- geoip.continent_name: keyword (\"Africa\")\n- geoip.country_iso_code: keyword (\"EG\")\n- geoip.location: geo_point ({\"lon\":31.3,\"lat\":30.1})\n- geoip.region_name: keyword (\"Cairo Governorate\")\n- manufacturer: text ([\"Elitelligence\",\"Oceanavigations\"])\n- order_date: date (\"2024-04-29T09:28:48+00:00\")\n- order_id: keyword (584677)\n- products._id: text ()\n- products.base_price: half_float ()\n- products.base_unit_price: half_float ()\n- products.category: text ()\n- products.created_on: date ()\n- products.discount_amount: half_float ()\n- products.discount_percentage: half_float ()\n- products.manufacturer: text ()\n- products.min_price: half_float ()\n- products.price: half_float ()\n- products.product_id: long ()\n- products.product_name: text ()\n- products.quantity: integer ()\n- products.sku: keyword ()\n- products.tax_amount: half_float ()\n- products.taxful_price: half_float ()\n- products.taxless_price: half_float ()\n- products.unit_discount_amount: half_float ()\n- sku: keyword ([\"ZO0549605496\",\"ZO0299602996\"])\n- taxful_total_price: half_float (36.98)\n- taxless_total_price: half_float (36.98)\n- total_quantity: integer (2)\n- total_unique_products: integer (2)\n- type: keyword (\"order\")\n- user: keyword (\"eddie\")\n\n",
    "target_index": "ecommerce",
    "query": "describe ecommerce | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "Describe the schema of the log_index.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index",
    "type": "9"
  },
  {
    "question": "Describe my index.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index",
    "type": "9"
  },
  {
    "question": "What columns I could query?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "Describe the fields available in the log_index index.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index | fields COLUMN_NAME",
    "type": "9"
  },
  {
    "question": "How many fields are in the `otel_logs` index?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs | fields COLUMN_NAME | stats COUNT() as total_fields",
    "type": "10"
  },
  {
    "question": "Display the number of fields in the \"otel_logs\" index.",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "How many fields are in the otel_logs index?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "How many fields can I query in the otel_logs index?",
    "table_info": "\n- droppedAttributesCount: long (0)\n- droppedEventsCount: long (0)\n- droppedLinksCount: long (0)\n- durationInNanos: long (948000)\n- endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- events: nested ([])\n- kind: keyword (\"SPAN_KIND_SERVER\")\n- links: nested ([])\n- name: keyword (\"HTTP GET /\")\n- parentSpanId: keyword (\"\")\n- resource.attributes.client-uuid: keyword (\"71895c867c8c566b\")\n- resource.attributes.host@name: keyword (\"d05961bf9396\")\n- resource.attributes.ip: keyword (\"172.18.0.4\")\n- resource.attributes.opencensus@exporterversion: keyword (\"Jaeger-Go-2.30.0\")\n- resource.attributes.service@name: keyword (\"frontend\")\n- serviceName: keyword (\"frontend\")\n- span.attributes.component: keyword (\"net/http\")\n- span.attributes.http@method: keyword (\"GET\")\n- span.attributes.http@status_code: keyword (200)\n- span.attributes.http@url: keyword (\"/jquery-3.1.1.min.js\")\n- span.attributes.sampler@param: keyword (true)\n- span.attributes.sampler@type: keyword (\"const\")\n- spanId: keyword (\"6b85fc951c994dc6\")\n- startTime: date_nanos (\"2023-12-18T02:25:15.756464Z\")\n- status.code: integer (0)\n- status.message: keyword ()\n- traceGroup: keyword (\"HTTP GET /\")\n- traceGroupFields.durationInNanos: long (948000)\n- traceGroupFields.endTime: date_nanos (\"2023-12-18T02:25:15.757412Z\")\n- traceGroupFields.statusCode: integer (0)\n- traceId: keyword (\"00000000000000006b85fc951c994dc6\")\n- traceState: text (\"\")\n\n",
    "target_index": "otel_logs",
    "query": "describe otel_logs | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "Can you show me the count of fields in the log_index index?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "Generate a PPL query to show the number of fields in the log_index index.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "Show me the field count in the log_index.",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index | fields COLUMN_NAME | stats COUNT() as cnt",
    "type": "10"
  },
  {
    "question": "How many fields are available in the log_index index?",
    "table_info": "\n- agent: text (\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\")\n- bytes: long (6219)\n- clientip: ip (\"223.87.60.27\")\n- event.dataset: keyword (\"sample_web_logs\")\n- extension: text (\"deb\")\n- geo.coordinates: geo_point ({\"lon\":-88.8454325,\"lat\":39.41042861})\n- geo.dest: keyword (\"US\")\n- geo.src: keyword (\"IN\")\n- geo.srcdest: keyword (\"IN:US\")\n- host: text (\"artifacts.opensearch.org\")\n- index: text (\"opensearch_dashboards_sample_data_logs\")\n- ip: ip (\"223.87.60.27\")\n- machine.os: text (\"win 8\")\n- machine.ram: long (8589934592)\n- memory: double (null)\n- message: text (\"223.87.60.27 - - [2018-07-22T00:39:02.912Z] \\\"GET \\/opensearch\\/opensearch-1.0.0.deb_1 HTTP\\/1.1\\\" 200 6219 \\\"-\\\" \\\"Mozilla\\/5.0 (X11; Linux x86_64; rv:6.0a1) Gecko\\/20110421 Firefox\\/6.0a1\\\"\")\n- phpmemory: long (null)\n- referer: keyword (\"http:\\/\\/twitter.com\\/success\\/wendy-lawrence\")\n- request: text (\"\\/opensearch\\/opensearch-1.0.0.deb\")\n- response: text (200)\n- tags: text ([\"success\",\"info\"])\n- timestamp: date (\"2024-02-27T02:59:24.477Z\")\n- url: text (\"https:\\/\\/artifacts.opensearch.org\\/downloads\\/opensearch\\/opensearch-1.0.0.deb_1\")\n- utc_time: date (\"2024-02-27T02:59:24.477Z\")\n\n",
    "target_index": "log_index",
    "query": "describe log_index | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "Show me the number of fields in the sso_log index.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "Show the count of columns.",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "Can you show me the count of fields in the sso_log index?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log | fields COLUMN_NAME | stats COUNT() as field_count",
    "type": "10"
  },
  {
    "question": "How many fields are in the sso_log index?",
    "table_info": "\n- @timestamp: date (\"2024-04-09T13:36:42.099Z\")\n- attributes.data_stream.dataset: text (\"frontend.access\")\n- attributes.data_stream.namespace: text (\"production\")\n- attributes.data_stream.type: text (\"logs\")\n- body: text (\"10.0.0.97 - - [21\\/Jun\\/2023:23:37:40 +0000] \\\"GET \\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N HTTP\\/1.1\\\" 200 1554 \\\"-\\\" \\\"python-requests\\/2.28.1\\\"\")\n- communication.source.address: text (\"127.0.0.1\")\n- communication.source.ip: text (\"10.0.0.97\")\n- event.category: text ([\"web\"])\n- event.domain: text (\"frontend.access\")\n- event.kind: text (\"event\")\n- event.name: text (\"access\")\n- event.result: text (\"success\")\n- event.type: text ([\"access\"])\n- http.flavor: text (\"1.1\")\n- http.request.method: text (\"GET\")\n- http.response.bytes: long (1554)\n- http.response.status_code: text (\"200\")\n- http.url: text (\"\\/api\\/recommendations?productIds\\u003d2ZYFJ3GM2N\")\n- log: text ()\n- observerTime: date (\"2024-04-09T13:36:42.099Z\")\n- span_id: text (\"abcdef1010\")\n- trace_id: text (\"102981ABCD2901\")\n\n",
    "target_index": "sso_log",
    "query": "describe sso_log | fields COLUMN_NAME | stats COUNT() as field_num",
    "type": "10"
  }
]