Here are 5 samples of simple search requests, PPL queries, Python code, and full descriptions based on the given index mapping:

1. <request>clientip:192.168.0.1 AND bytes>5000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where clientip = '192.168.0.1' and bytes > 5000</ppl>
<python>[doc for doc in documents if doc.get('clientip') == '192.168.0.1' and doc.get('bytes') is not None and int(doc.get('bytes')) > 5000]</python>
<full_desc>Show me all logs with client IP 192.168.0.1 and bytes transferred greater than 5000</full_desc>

2. <request>machine.os:win* AND phpmemory<1000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where machine.os like 'win%' and phpmemory < 1000</ppl>
<python>[doc for doc in documents if doc.get('machine', {}).get('os', '').startswith('win') and doc.get('phpmemory') is not None and int(doc.get('phpmemory')) < 1000]</python>
<full_desc>Show me all logs from Windows machines with PHP memory usage less than 1000</full_desc>

3. <request>geo.src:US AND response:200</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where geo.src = 'US' and response = '200'</ppl>
<python>[doc for doc in documents if doc.get('geo', {}).get('src') == 'US' and str(doc.get('response')) == '200']</python>
<full_desc>Show me all logs originating from the US with a response code of 200</full_desc>

4. <request>url:*.php AND memory>=10</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where url like '%.php' and memory >= 10</ppl>
<python>[doc for doc in documents if str(doc.get('url')).endswith('.php') and doc.get('memory') is not None and float(doc.get('memory')) >= 10]</python>
<full_desc>Show me all logs with URLs ending in .php and memory usage greater than or equal to 10</full_desc>

5. <request>agent:Mozilla* AND NOT extension:css</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where agent like 'Mozilla%' and NOT extension = 'css'</ppl>
<python>[doc for doc in documents if str(doc.get('agent')).startswith('Mozilla') and str(doc.get('extension')) != 'css']</python>
<full_desc>Show me all logs with user agent starting with Mozilla and file extension not css</full_desc>