Here are 5 samples of simple search requests, PPL queries, Python code, and full descriptions based on the given index mapping:

<request>clientip=10.0.0.1</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where clientip = '10.0.0.1'</ppl>
<python>[doc for doc in documents if doc.get('clientip') == '10.0.0.1']</python>
<full_desc>Show me all logs with client IP address 10.0.0.1</full_desc>

<request>memory>500 AND machine.ram<8000000000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where memory > 500 and machine.ram < 8000000000</ppl>
<python>[doc for doc in documents if doc.get('memory') is not None and float(doc['memory']) > 500 and doc.get('machine', {}).get('ram') is not None and int(doc['machine']['ram']) < 8000000000]</python>
<full_desc>Show me all logs with memory usage greater than 500 and machine RAM less than 8GB</full_desc>

<request>geo.dest=US AND bytes<1000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where geo.dest = 'US' and bytes < 1000</ppl>
<python>[doc for doc in documents if doc.get('geo', {}).get('dest') == 'US' and doc.get('bytes') is not None and int(doc['bytes']) < 1000]</python>
<full_desc>Show me all logs with destination country as US and transferred bytes less than 1000</full_desc>

<request>machine.os=win xp AND phpmemory>50000000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where machine.os = 'win xp' and phpmemory > 50000000</ppl>
<python>[doc for doc in documents if doc.get('machine', {}).get('os', '').lower() == 'win xp' and doc.get('phpmemory') is not None and int(doc['phpmemory']) > 50000000]</python>
<full_desc>Show me all logs from Windows XP machines with PHP memory usage greater than 50MB</full_desc>

<request>timestamp>"2023-01-01T00:00:00" AND agent=Mozilla</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where timestamp > '2023-01-01T00:00:00' and agent = 'Mozilla'</ppl>
<python>[doc for doc in documents if doc.get('timestamp') is not None and doc['timestamp'] > '2023-01-01T00:00:00' and doc.get('agent', '').lower() == 'mozilla']</python>
<full_desc>Show me all logs after January 1, 2023, with Mozilla as the user agent</full_desc>