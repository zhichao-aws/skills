Here are 5 samples of simple search requests, PPL queries, Python code, and full descriptions based on the given index mapping:

1. <request>clientip=192.168.1.100</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where clientip = '192.168.1.100'</ppl>
<python>[doc for doc in documents if doc.get('clientip') == '192.168.1.100']</python>
<full_desc>Show me all logs with client IP address 192.168.1.100</full_desc>

2. <request>bytes>5000 AND extension=css</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where bytes > 5000 AND extension = 'css'</ppl>
<python>[doc for doc in documents if doc.get('bytes') is not None and int(doc.get('bytes')) > 5000 and str(doc.get('extension')) == 'css']</python>
<full_desc>Show me all logs with bytes greater than 5000 and file extension css</full_desc>

3. <request>geo.dest:US AND machine.ram<8000000000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where geo.dest = 'US' AND machine.ram < 8000000000</ppl>
<python>[doc for doc in documents if doc.get('geo', {}).get('dest') == 'US' and doc.get('machine', {}).get('ram') is not None and int(doc.get('machine', {}).get('ram')) < 8000000000]</python>
<full_desc>Show me all logs with destination country US and machine RAM less than 8GB</full_desc>

4. <request>memory>0.5 AND agent:Mozilla</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where memory > 0.5 AND like(agent, '%Mozilla%')</ppl>
<python>[doc for doc in documents if doc.get('memory') is not None and float(doc.get('memory')) > 0.5 and 'Mozilla' in str(doc.get('agent', ''))]</python>
<full_desc>Show me all logs with memory usage greater than 0.5 and agent containing Mozilla</full_desc>

5. <request>timestamp>[2023-01-01 TO 2023-01-31] AND response=200</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where timestamp >= '2023-01-01' AND timestamp <= '2023-01-31' AND response = '200'</ppl>
<python>[doc for doc in documents if doc.get('timestamp') is not None and '2023-01-01' <= doc.get('timestamp') <= '2023-01-31' and str(doc.get('response')) == '200']</python>
<full_desc>Show me all logs with timestamp between January 1, 2023 and January 31, 2023, and response code 200</full_desc>