Here are 5 samples of simple search requests, PPL queries, Python code, and full descriptions based on the given index mapping:

1. <request>bytes>10000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where bytes > 10000</ppl>
<python>[doc for doc in documents if doc.get('bytes') is not None and int(doc.get('bytes')) > 10000]</python>
<full_desc>Show me all logs with bytes transferred greater than 10000</full_desc>

2. <request>clientip:192.168.0.*</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where like(clientip, '192.168.0.%')</ppl>
<python>[doc for doc in documents if doc.get('clientip') and str(doc.get('clientip')).startswith('192.168.0.')]</python>
<full_desc>Show me all logs from client IPs in the 192.168.0.* subnet</full_desc>

3. <request>machine.ram<8589934592</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where machine.ram < 8589934592</ppl>
<python>[doc for doc in documents if doc.get('machine', {}).get('ram') is not None and int(doc['machine']['ram']) < 8589934592]</python>
<full_desc>Show me all logs from machines with RAM less than 8GB (8589934592 bytes)</full_desc>

4. <request>timestamp:[2023-01-01 TO 2023-01-31]</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where timestamp >= '2023-01-01' and timestamp <= '2023-01-31'</ppl>
<python>[doc for doc in documents if doc.get('timestamp') and '2023-01-01' <= doc['timestamp'] <= '2023-01-31']</python>
<full_desc>Show me all logs with timestamps between January 1, 2023 and January 31, 2023</full_desc>

5. <request>extension:php AND phpmemory>20000000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where extension='php' and phpmemory > 20000000</ppl>
<python>[doc for doc in documents if str(doc.get('extension')) == 'php' and doc.get('phpmemory') is not None and int(doc.get('phpmemory')) > 20000000]</python>
<full_desc>Show me all logs for PHP files that used more than 20MB of PHP memory</full_desc>