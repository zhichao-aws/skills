Here are 5 samples of simple search requests, PPL queries, Python code, and full descriptions based on the given index mapping:

<request>clientip:192.168.0.*</request><ppl>source=opensearch_dashboards_sample_data_logs | where STARTS_WITH(clientip, '192.168.0.')</ppl><python>[doc for doc in documents if doc.get('clientip') and str(doc['clientip']).startswith('192.168.0.')]</python><full_desc>Show me all logs with client IP addresses starting with 192.168.0.</full_desc>

<request>machine.ram>16000000000</request><ppl>source=opensearch_dashboards_sample_data_logs | where machine.ram > 16000000000</ppl><python>[doc for doc in documents if doc.get('machine', {}).get('ram') is not None and int(doc['machine']['ram']) > 16000000000]</python><full_desc>Show me all logs where the machine RAM is greater than 16 GB (16000000000 bytes).</full_desc>

<request>geo.dest:US AND bytes<1000</request><ppl>source=opensearch_dashboards_sample_data_logs | where geo.dest = 'US' AND bytes < 1000</ppl><python>[doc for doc in documents if doc.get('geo', {}).get('dest') == 'US' and doc.get('bytes') is not None and int(doc['bytes']) < 1000]</python><full_desc>Show me all logs with destination country as US and transferred bytes less than 1000.</full_desc>

<request>timestamp:[2023-01-01 TO 2023-01-31] AND phpmemory>10000000</request><ppl>source=opensearch_dashboards_sample_data_logs | where timestamp >= '2023-01-01' AND timestamp <= '2023-01-31' AND phpmemory > 10000000</ppl><python>[doc for doc in documents if doc.get('timestamp') and '2023-01-01' <= doc['timestamp'] <= '2023-01-31' and doc.get('phpmemory') is not None and int(doc['phpmemory']) > 10000000]</python><full_desc>Show me all logs from January 2023 with PHP memory usage greater than 10 MB.</full_desc>

<request>agent:Mozilla* AND NOT extension:php</request><ppl>source=opensearch_dashboards_sample_data_logs | where STARTS_WITH(agent, 'Mozilla') AND NOT extension = 'php'</ppl><python>[doc for doc in documents if doc.get('agent') and str(doc['agent']).startswith('Mozilla') and doc.get('extension') != 'php']</python><full_desc>Show me all logs with user agent starting with Mozilla and file extension not being PHP.</full_desc>