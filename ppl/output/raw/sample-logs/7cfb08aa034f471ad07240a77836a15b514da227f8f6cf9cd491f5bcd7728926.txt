Here are 5 samples of simple search requests, PPL queries, Python code, and full descriptions based on the given index mapping:

1. <request>clientip:192.168.0.1</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where clientip = '192.168.0.1'</ppl>
<python>[doc for doc in documents if doc.get('clientip') == '192.168.0.1']</python>
<full_desc>Show me all logs with client IP address 192.168.0.1</full_desc>

2. <request>bytes>5000 AND machine.ram<8000000000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where bytes > 5000 AND machine.ram < 8000000000</ppl>
<python>[doc for doc in documents if doc.get('bytes') is not None and int(doc.get('bytes')) > 5000 and doc.get('machine', {}).get('ram') is not None and int(doc.get('machine', {}).get('ram')) < 8000000000]</python>
<full_desc>Show me all logs with bytes greater than 5000 and machine RAM less than 8GB</full_desc>

3. <request>geo.dest:US AND response:200</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where geo.dest = 'US' AND response = '200'</ppl>
<python>[doc for doc in documents if doc.get('geo', {}).get('dest') == 'US' and str(doc.get('response')) == '200']</python>
<full_desc>Show me all logs with destination country US and HTTP response code 200</full_desc>

4. <request>timestamp:[2023-01-01 TO 2023-01-31] AND agent:Mozilla</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where timestamp >= '2023-01-01' AND timestamp <= '2023-01-31' AND LIKE(agent, '%Mozilla%')</ppl>
<python>[doc for doc in documents if '2023-01-01' <= doc.get('timestamp', '') <= '2023-01-31' and 'Mozilla' in str(doc.get('agent', ''))]</python>
<full_desc>Show me all logs from January 2023 with Mozilla as the user agent</full_desc>

5. <request>phpmemory>1000000 OR memory<0.5</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where phpmemory > 1000000 OR memory < 0.5</ppl>
<python>[doc for doc in documents if (doc.get('phpmemory') is not None and int(doc.get('phpmemory')) > 1000000) or (doc.get('memory') is not None and float(doc.get('memory')) < 0.5)]</python>
<full_desc>Show me all logs with PHP memory usage over 1MB or general memory usage under 0.5</full_desc>