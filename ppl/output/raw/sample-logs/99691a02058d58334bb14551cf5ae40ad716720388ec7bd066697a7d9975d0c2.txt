Here are 5 samples of simple search requests, PPL queries, Python code, and full descriptions:

<request>clientip:10.0.0.0/8</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where CIDR_MATCH(clientip, '10.0.0.0/8')</ppl>
<python>[doc for doc in documents if doc.get('clientip') and ipaddress.ip_address(doc['clientip']) in ipaddress.ip_network('10.0.0.0/8')]</python>
<full_desc>Show me all logs with client IP addresses in the 10.0.0.0/8 range</full_desc>

<request>memory>500 AND machine.ram<8000000000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where memory > 500 AND machine.ram < 8000000000</ppl>
<python>[doc for doc in documents if doc.get('memory') is not None and float(doc['memory']) > 500 and doc.get('machine', {}).get('ram') is not None and int(doc['machine']['ram']) < 8000000000]</python>
<full_desc>Show me all logs with memory usage greater than 500 and machine RAM less than 8GB</full_desc>

<request>geo.dest:US AND bytes<1000</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where geo.dest = 'US' AND bytes < 1000</ppl>
<python>[doc for doc in documents if doc.get('geo', {}).get('dest') == 'US' and doc.get('bytes') is not None and int(doc['bytes']) < 1000]</python>
<full_desc>Show me all logs with destination country as US and transferred bytes less than 1000</full_desc>

<request>agent:Mozilla* AND NOT extension:php</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where STARTS_WITH(agent, 'Mozilla') AND NOT extension = 'php'</ppl>
<python>[doc for doc in documents if doc.get('agent') and str(doc['agent']).startswith('Mozilla') and doc.get('extension') != 'php']</python>
<full_desc>Show me all logs with user agent starting with 'Mozilla' and file extension not being 'php'</full_desc>

<request>@timestamp:[now-1d TO now] AND response:200</request>
<ppl>source=opensearch_dashboards_sample_data_logs | where timestamp >= ago(1d) AND response = '200'</ppl>
<python>[doc for doc in documents if doc.get('timestamp') and (datetime.now() - timedelta(days=1) <= doc['timestamp'] <= datetime.now()) and str(doc.get('response')) == '200']</python>
<full_desc>Show me all logs from the last 24 hours with a response code of 200</full_desc>